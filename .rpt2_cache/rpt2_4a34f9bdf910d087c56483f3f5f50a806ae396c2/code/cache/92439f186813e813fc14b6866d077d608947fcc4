{"code":"var deepClone = function (obj) { return JSON.parse(JSON.stringify(obj)); };\r\nvar EnrichStage = /** @class */ (function () {\r\n    function EnrichStage(enricher) {\r\n        this.enricher = enricher;\r\n    }\r\n    EnrichStage.prototype.emit = function (events) {\r\n        for (var i = 0; i < events.length; ++i) {\r\n            var extraProperties = this.enricher instanceof Function\r\n                ? this.enricher(deepClone(events[i].properties))\r\n                : this.enricher;\r\n            Object.assign(events[i].properties, extraProperties);\r\n        }\r\n        return events;\r\n    };\r\n    EnrichStage.prototype.flush = function () {\r\n        return Promise.resolve();\r\n    };\r\n    return EnrichStage;\r\n}());\r\nexport { EnrichStage };\r\n","references":["C:/Users/bryce/Google Drive/Development/serilogger/src/pipeline.ts","C:/Users/bryce/Google Drive/Development/serilogger/src/logEvent.ts"],"dts":{"name":"C:/Users/bryce/Google Drive/Development/serilogger/enrichStage.d.ts","writeByteOrderMark":false,"text":"import { PipelineStage } from './pipeline';\r\nimport { LogEvent } from './logEvent';\r\nexport declare type ObjectFactory = (properties?: Object) => Object;\r\nexport declare class EnrichStage implements PipelineStage {\r\n    private readonly enricher;\r\n    constructor(enricher: Object | ObjectFactory);\r\n    emit(events: LogEvent[]): LogEvent[];\r\n    flush(): Promise<any>;\r\n}\r\n"}}
