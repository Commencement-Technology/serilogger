{"code":"var SinkStage = /** @class */ (function () {\r\n    function SinkStage(sink) {\r\n        this.sink = sink;\r\n    }\r\n    SinkStage.prototype.emit = function (events) {\r\n        this.sink.emit(events);\r\n        return events;\r\n    };\r\n    SinkStage.prototype.flush = function () {\r\n        return this.sink.flush();\r\n    };\r\n    return SinkStage;\r\n}());\r\nexport { SinkStage };\r\n","references":["C:/Users/bryce/Google Drive/Development/serilogger/src/logEvent.ts","C:/Users/bryce/Google Drive/Development/serilogger/src/pipeline.ts"],"dts":{"name":"C:/Users/bryce/Google Drive/Development/serilogger/sink.d.ts","writeByteOrderMark":false,"text":"import { LogEvent } from './logEvent';\r\nimport { PipelineStage } from './pipeline';\r\nexport interface Sink {\r\n    emit(events: LogEvent[]): any;\r\n    flush(): Promise<any>;\r\n}\r\nexport declare class SinkStage implements PipelineStage {\r\n    private readonly sink;\r\n    constructor(sink: Sink);\r\n    emit(events: LogEvent[]): LogEvent[];\r\n    flush(): Promise<any>;\r\n}\r\n"}}
